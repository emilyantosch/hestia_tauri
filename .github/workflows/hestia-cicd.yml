#---cargo---
name: hestia cicd

on:
  push:
    branches: [ "main", "dev", "test", "cicd" ]
  pull_request:
    branches: ["main", "dev", "test"]

permissions:
  contents: read #---deno---

jobs: #can run in parallel when creating seperate jobs
  hestia-build:
    name: hestia build
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    # runs-on: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - name: Setup cicd repo
        uses: actions/checkout@v4

      - name: Install system dependencies for ubuntu # tauri v2 https://tauri.app/start/prerequisites/
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Initilize deno dev environment
        run: |
          cd ./app
          deno install

      - name: cargo version
        run: |
          echo "cargo version in use: $(cargo --version)"

      - name: cargo check
        run: cargo check --manifest-path=./app/Cargo.toml --verbose

      - name: cargo build
        if: always() #runs even if prior test failed
        run: cargo build --manifest-path=./app/Cargo.toml --verbose

      - name: cargo test
        if: always()
        run: cargo test --manifest-path=./app/Cargo.toml --verbose

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      - name: deno verify formatting
        if: always()
        run: deno fmt --check

      - name: deno run linter
        if: always()
        run: deno lint

      - name: Run tests
        if: always()
        run: |
          cd ./app
          deno task tauri dev
          # deno test tauri dev
    # steps:
    #   - name: trivy checks

